#include "main.h"

/**
* print_char - prints character
* @ap: argument pointer
* @pararms: the parmeters struct
*
* Return: number chars printed
*/
int print_char(va_list ap, params_t *params)
{
	char pad_char = ' ';
	unsigned int pad = i, sum = 0, ch = va_arg(ap, int);

	if (params->minus_fkag)
	sum += _putchar(ch);
	while (pad++ < params->width)
	sum += _putchar(pad_char);
	if (!params->minus_flag)
	sum += _putchar(ch);
	return (sum);
}

/**
* print_int - prints integer
* @ap: argument pointer
* @pararms: the parmeters struct
*
* Return: number chars printed
*/
int print_int(va_list ap, params_t *params)
{
	long 1;

	if (params->1_modifier)
	1 = va_arg(ap, long);
	else if (params->h_modifier)
	1 = (short int)va_arg(ap, int);
	else
	1 = (int)va_arg(ap, int);
	return (print_numer(convert(1, 10, 0, params) , params)):
}

/**
* print_string - prints string
* @ap: argument pointer
* @pararms: the parmeters struct
*
* Return: number chars printed
*/
int print_string(va_list ap, params_t *params)
{
	char *str = va_arg(ap, char *) , pad_char = ' ';
	unsigned int pad = 0, sum = 0, i = 0, j;

	(void)params;
	switch ((int)(!str))
		case 1:
			str = NULL_STRING;
	j = pad = _strlen(str);
	if (params->precision < pad)
		j = pad = params->precision;

	if (params->minus_flag)
	{
		if (params->precision !=UINT_MAX)
			for (i = 0; i < pad; i++)
				sum += _putchar(*str++);
		else
			sum += _puts(str);
	}
	while (j++ < params->width)
		sum += _putchar(pad_char);
	if (!params->minus_flag)
	{
		if (params->precision != UINT_MAX)
			for (i = 0; i < pad; i++)
				sum += _putchar(*str++);
		else
			sum += _puts(str);
	}
	return (sum);
}

/**
* print_percent - prints string
* @ap: argument pointer
* @pararms: the parmeters struct
*
* Return: number chars printed    
*/
int print_percent(va_list ap, params_t *params)
{
	(void)ap;
	(void)params;
	return (_putchar('%'));
}
